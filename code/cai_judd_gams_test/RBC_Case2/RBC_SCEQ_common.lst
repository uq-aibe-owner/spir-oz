GAMS 38.1.0  a1a3b545 Jan 31, 2022          DEX-DEG x86 64bit/Mac OS X - 03/28/22 12:56:28 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  ** This is a code of SCEQ to solve a multi-country real business cycle problem
   2  *
   3  * If using material from this code, the user should cite the following paper:
   4  * Cai, Y., and K.L. Judd (2021). A Simple but Powerful Simulated Certainty Equivalent
   5  *   Approximation Method for Dynamic Stochastic Problems. Working Paper.
   6  *----------------------------------------------------------------------
   7   
   8  scalar starttime;
   9  starttime = jnow;
  10   
  11  set j countries /1*10/;
  12  set t time /1*71/;
  13  alias(tt,t);
  14   
  15  * number of different paths + 1 (the extra one is for error checking at the last period of interest)
  16  set npath /1*21/;
  17   
  18  parameters
  19  beta        discount rate /0.99/
  20  alpha       capital cost share /0.33/
  21  delta       capital stock depreciation /0.025/
  22  phi         adjustment cost parameter /0.5/
  23  gamma       intertemporal elasticity of substitution /0.5/
  24  gammahat    utility parameter
  25  eta         Frisch elasticity of labor supply /0.5/
  26  etahat      utility parameter
  27  A           technology parameter
  28  B           relative weight of consumption and leisure
  29  s           starting period
  30  DT          number of periods for optimization in SCEQ / 50 /
  31  Tstar       number of periods of interest
  32  tau(j)      weight
  33  Imin        lower bound of investment
  34  k0(j)       initial capital
  35  kmin        smallest capital    / 0.1 /
  36  kmax        largest capital     / 10 /
  37  zeta1       TFP before shock   / 1 /
  38  zeta2       TFP after shock   / 0.95 /
  39  prob1       one period probability of jump of TFP / 0.01 /
  40  probs(t)    probability of jump of TFP
  41  ;
  42   
  43  Tstar = card(npath)-1;
  44   
  45  A = (1 - (1-delta)*beta) / (alpha * beta);
  46  gammahat = 1-(1/gamma);
  47  B = (1 - alpha)*A*(A-delta)**(-1/gamma);
  48  etahat = 1+(1/eta);
  49   
  50  Imin = 0.9*delta;
  51   
  52  tau(j) = 1;
  53  *k0(j) = kmin + (kmax-kmin)*(ord(j)-1)/(card(j)-1);
  54  k0(j) = exp(log(kmin) + (log(kmax)-log(kmin))*(ord(j)-1)/(card(j)-1));
  55   
  56  display A, B, k0;
  57   
  58  *************
  59  * define model
  60   
  61  Variables
  62  obj objective criterion
  63  Inv(j,t) investment
  64  ;
  65   
  66  Positive variables
  67  k(j,t) capital stock
  68  c(j,t) consumption
  69  l(j,t) labor supply
  70  ;
  71   
  72  Equations
  73  objfun Objective function
  74  TransitionCapital(j,t) Law of Motion for Capital Stock
  75  BudgetConstraint(t) budget constraint before jump
  76  TippedBudgetConstraint(t) budget constraint after jump
  77  ;
  78   
  79  objfun ..
  80  obj =e= sum(j, tau(j) * sum(t$(ord(t)>=s and ord(t)<s+DT), beta**(ord(t)-s)*((c(j,t)**gammahat)/gammahat - B * (l(j,t)**etahat)/etahat))) +
  81    sum(j, tau(j) * sum(t$(ord(t)=s+DT), beta**(ord(t)-s)*((( (0.75*A*(k(j,t)**alpha))**gammahat )/gammahat-B)/(1-beta)))) ;
  82   
  83  TransitionCapital(j,t)$(ord(t)>=s and ord(t)<s+DT) ..
  84  k(j,t+1) =e= (1-delta)*k(j,t) + Inv(j,t);
  85   
  86  BudgetConstraint(t)$(ord(t)>=s and ord(t)<s+DT) ..
  87  sum(j, c(j,t) + Inv(j,t) + (phi/2)*k(j,t)*sqr(Inv(j,t)/k(j,t)-delta)) =e= sum(j, (zeta2 + Probs(t)*(zeta1-zeta2))*A*(k(j,t)**alpha) * (l(j,t)**(1-alpha)));
  88   
  89  TippedBudgetConstraint(t)$(ord(t)>=s and ord(t)<s+DT) ..
  90  sum(j, c(j,t) + Inv(j,t) + (phi/2)*k(j,t)*sqr(Inv(j,t)/k(j,t)-delta)) =e= sum(j, zeta2*A*(k(j,t)**alpha) * (l(j,t)**(1-alpha)));
  91   
  92  * Bound Constraints
  93  k.lo(j,t) = 0.001;
  94  k.up(j,t) = 1000;
  95  c.lo(j,t) = 0.001;
  96  c.up(j,t) = 1000;
  97  l.lo(j,t) = 0.001;
  98  l.up(j,t) = 1000;
  99  Inv.lo(j,t) = Imin;
 100   
 101  * Initial Guess
 102  s = 1;
 103  Inv.l(j,t) = delta;
 104  k.l(j,t) = 1;
 105  l.l(j,t) = 1;
 106  c.l(j,t) = A-delta;
 107  obj.l = sum(j, tau(j) * sum(t$(ord(t)>=s and ord(t)<s+DT), beta**(ord(t)-s)*((c.l(j,t)**gammahat)/gammahat - B * (l.l(j,t)**etahat)/etahat))) +
 108    sum(j, tau(j) * sum(t$(ord(t)=s+DT), beta**(ord(t)-s)*((((0.75*A*(k.l(j,t)**alpha))**gammahat)/gammahat-B)/(1-beta))));
 109   
 110   
 111  options limrow = 0, limcol = 0;
 112  option reslim = 10000;
 113  option iterlim = 10000;
 114  option solprint = off;
 115  option nlp = conopt;
 116   
 117  model busc /objfun, TransitionCapital, BudgetConstraint/;
 118  model busc_tipped /objfun, TransitionCapital, TippedBudgetConstraint/;
 119   


COMPILATION TIME     =        0.003 SECONDS      3 MB  38.1.0 a1a3b545 DEX-DEG
GAMS 38.1.0  a1a3b545 Jan 31, 2022          DEX-DEG x86 64bit/Mac OS X - 03/28/22 12:56:28 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----     56 PARAMETER A                    =        0.106  technology parameter
            PARAMETER B                    =       10.764  relative weight of consumption and leisure

----     56 PARAMETER k0  initial capital

1   0.100,    2   0.167,    3   0.278,    4   0.464,    5   0.774,    6   1.292,    7   2.154,    8   3.594,    9   5.995,    10 10.000



EXECUTION TIME       =        0.002 SECONDS      4 MB  38.1.0 a1a3b545 DEX-DEG


USER: GAMS Demo license for Patrick OCallaghan       G220215|0002CO-GEN
      University of Queensland, Australia                      DL060418


**** FILE SUMMARY

Input      /Users/patrickocal_mchome/Documents/_uq-aibe/spir-oz/code/cai_judd_gams_test/RBC_Case2/RBC_SCEQ_common.gms
Output     /Users/patrickocal_mchome/Documents/_uq-aibe/spir-oz/code/cai_judd_gams_test/RBC_Case2/RBC_SCEQ_common.lst
